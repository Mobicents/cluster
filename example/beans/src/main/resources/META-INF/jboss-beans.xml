<?xml version="1.0" encoding="UTF-8"?>

<deployment xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:jboss:bean-deployer:2.0">

<bean name="Mobicents.CacheConfig" class="org.jboss.cache.config.Configuration">  
         
       <property name="transactionManagerLookupClass">org.jboss.cache.transaction.JBossTransactionManagerLookup</property>

         <property name="nodeLockingScheme">MVCC</property>
         <property name="isolationLevel">REPEATABLE_READ</property>
         <property name="useLockStriping">false</property>

         <!-- Must use REPL since used for timestamp caching. 
              Must use SYNC to maintain cache coherency for entities. -->
         <property name="cacheMode">REPL_SYNC</property> 
         <property name="clusterName">${jboss.partition.name:DefaultPartition}-mobicents-slee</property>        
         <property name="multiplexerStack">${jboss.default.jgroups.stack:udp}</property>
         <!-- Used for timestamps, so must fetch state. 
         <property name="fetchInMemoryState">true</property>
         -->
         <!-- The max amount of time (in milliseconds) we wait until the
           state (ie. the contents of the cache) are retrieved from
           existing members at startup. Ignored if FetchInMemoryState=false. -->
         <property name="stateRetrievalTimeout">60000</property>
         <!-- Number of milliseconds to wait until all responses for a
               synchronous call have been received. -->
         <property name="syncReplTimeout">17500</property>
         <!-- Max number of milliseconds to wait for a lock acquisition -->
         <property name="lockAcquisitionTimeout">15000</property>

         <property name="useRegionBasedMarshalling">true</property>
         <property name="inactiveOnStartup">true</property>

         <!-- Disable asynchronous RPC marshalling/sending -->
         <property name="serializationExecutorPoolSize">0</property>        
         <!-- We have no asynchronous notification listeners -->
         <property name="listenerAsyncPoolSize">0</property>        
         
	     <property name="lockParentForChildInsertRemove">false</property>
            
      <demand>RealTransactionManager</demand>
   </bean>
   
	<bean name="Mobicents.Cache" class="org.mobicents.cache.MobicentsCache">
		<constructor>
          <parameter class="org.jboss.cache.config.Configuration"><inject bean="Mobicents.CacheConfig"/></parameter> 
     	</constructor>		
     	<demand>Mobicents.CacheConfig</demand>	
	</bean>

	<bean name="MobicentsJBossCacheJmxWrapper" class="org.jboss.cache.jmx.CacheJmxWrapper">
      <annotation>@org.jboss.aop.microcontainer.aspects.jmx.JMX(name="jboss.cache:service=MobicentsJBossCache",exposedInterface=org.jboss.cache.jmx.CacheJmxWrapperMBean.class,registerDirectly=true)</annotation>
      <constructor>
          <parameter><value-factory bean="Mobicents.Cache" method="getJBossCache"/></parameter>
      </constructor>
      <demand>Mobicents.Cache</demand>	      
   </bean>

   	<!-- cluster member failover elector -->
   	
	<bean name="Mobicents.Cluster.DefaultElector" class="org.mobicents.cluster.election.DefaultClusterElector" />
	
	<!-- cluster control -->
	
	<bean name="Mobicents.Cluster" class="org.mobicents.cluster.DefaultMobicentsCluster">
		<constructor>
			<parameter><inject bean="Mobicents.Cache"/></parameter>
			<parameter><inject bean="RealTransactionManager"/></parameter>
			<parameter><inject bean="Mobicents.Cluster.DefaultElector"/></parameter>
		</constructor>				
		<demand>Mobicents.Cache</demand>
		<demand>RealTransactionManager</demand>
		<demand>Mobicents.Cluster.DefaultElector</demand>
	</bean>
	
	<bean name="Mobicents.FaultTolerantJavaUtilTimer" class="org.mobicents.timers.timer.FaultTolerantTimer">
		<constructor>
			<parameter>timer</parameter>
			<parameter><inject bean="Mobicents.Cluster"/></parameter>
			<!-- cluster local listener priority -->
			<parameter>10</parameter>
			<parameter><inject bean="RealTransactionManager"/></parameter>
		</constructor>		
	</bean>
	
	<bean name="MCClusterTest" class="org.mobicents.cluster.test.MCClusterTest">
		<annotation>@org.jboss.aop.microcontainer.aspects.jmx.JMX(name="jboss.mobicents:name=TimerTest",exposedInterface=org.mobicents.cluster.test.MCClusterTestMBean.class,registerDirectly=true)
		</annotation>

		<property name="faultTolerantTimer">
			<inject bean="Mobicents.FaultTolerantJavaUtilTimer" />
		</property>
		<property name="jta">
			<inject bean="RealTransactionManager" />
		</property>		
	</bean>

</deployment>